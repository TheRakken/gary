# We set the language to c because python isn't supported on the MacOS X nodes
# on Travis. However, the language ends up being irrelevant anyway, since we
# install Python ourselves using conda.
language: c

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# The apt packages below are needed for sphinx builds, which can no longer
# be installed with sudo apt-get.
addons:
    apt:
        packages:
            - graphviz
            - texlive-latex-extra
            - dvipng
env:
    global:
        # Set defaults to avoid repeating in most cases
        - NUMPY_VERSION=1.10
        - MAIN_CMD='python setup.py'
        - CONDA_DEPENDENCIES='Cython jinja2'
        - CONDA_ALL_DEPENDENCIES='Cython jinja2 scipy matplotlib pyyaml'
        - PIP_DEPENDENCIES='pygaia'
        - ASTROPY_VERSION=stable

    matrix:
        - PYTHON_VERSION=2.7 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.3 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.4 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.5 SETUP_CMD='egg_info'

matrix:
    include:

        # Try MacOS X
        - os: osx
          env: PYTHON_VERSION=2.7 SETUP_CMD='test'
               CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES

        # Check for sphinx doc build warnings - we do this first because it
        # runs for a long time.
        - os: linux
          env: PYTHON_VERSION=2.7 SETUP_CMD='build_sphinx -w'
               CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES

        # Do a coverage test in Python 2.
        - os: linux
          env: PYTHON_VERSION=2.7 SETUP_CMD='test --coverage'

        # Try all python versions with the latest numpy, but without the
        # optional dependencies
        - os: linux
          env: PYTHON_VERSION=2.7 SETUP_CMD='test'
        - os: linux
          env: PYTHON_VERSION=3.3 SETUP_CMD='test'
        - os: linux
          env: PYTHON_VERSION=3.4 SETUP_CMD='test'
        - os: linux
          env: PYTHON_VERSION=3.5 SETUP_CMD='test'

before_install:

    # Install conda
    # http://conda.pydata.org/docs/travis.html#the-travis-yml-file
    - wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH="$HOME/miniconda/bin:$PATH"
    - hash -r
    - conda config --set always_yes yes --set changeps1 no
    - conda update -q conda
    - conda info -a

install:

    # CONDA
    - conda create --yes -n test -c astropy-ci-extras python=$TRAVIS_PYTHON_VERSION
    - source activate test

    # CORE DEPENDENCIES
    - if [[ $SETUP_CMD != egg_info ]]; then $CONDA_INSTALL numpy=$NUMPY_VERSION pytest pip Cython jinja2; fi
    - if [[ $SETUP_CMD != egg_info ]]; then $PIP_INSTALL pytest-xdist; fi

    # ASTROPY
    - if [[ $SETUP_CMD != egg_info ]] && [[ $ASTROPY_VERSION == development ]]; then $PIP_INSTALL git+http://github.com/astropy/astropy.git#egg=astropy; fi
    - if [[ $SETUP_CMD != egg_info ]] && [[ $ASTROPY_VERSION == stable ]]; then $CONDA_INSTALL numpy=$NUMPY_VERSION astropy; fi

    # OPTIONAL DEPENDENCIES
    # Here you can add any dependencies your package may have. You can use
    # conda for packages available through conda, or pip for any other
    # packages. You should leave the `numpy=$NUMPY_VERSION` in the `conda`
    # install since this ensures Numpy does not get automatically upgraded.
    - if [[ $SETUP_CMD != egg_info ]]; then $CONDA_INSTALL $CONDA_DEPENDENCIES; fi
    - if [[ $SETUP_CMD != egg_info ]]; then $PIP_INSTALL $PIP_DEPENDENCIES; fi

    # DOCUMENTATION DEPENDENCIES
    # build_sphinx needs sphinx and matplotlib (for plot_directive). Note that
    # this matplotlib will *not* work with py 3.x, but our sphinx build is
    # currently 2.7, so that's fine
    - if [[ $SETUP_CMD == build_sphinx* ]]; then $CONDA_INSTALL numpy=$NUMPY_VERSION Sphinx matplotlib; fi

    # COVERAGE DEPENDENCIES
    - if [[ $SETUP_CMD == 'test --coverage' ]]; then $PIP_INSTALL coverage coveralls; fi

script:
   - python setup.py $SETUP_CMD

after_success:
    # If coveralls.io is set up for this package, uncomment the line
    # below and replace "packagename" with the name of your package.
    # The coveragerc file may be customized as needed for your package.
    # - if [[ $SETUP_CMD == 'test --coverage' ]]; then coveralls --rcfile='packagename/tests/coveragerc'; fi
